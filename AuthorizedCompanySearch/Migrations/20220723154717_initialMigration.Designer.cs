// <auto-generated />
using System;
using AuthorizedCompanySearch.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthorizedCompanySearch.Migrations
{
    [DbContext(typeof(FirmDbContext))]
    [Migration("20220723154717_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuthorizedCompanySearch.Models.FirmModel", b =>
                {
                    b.Property<int>("FirmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FirmId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Authority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FirmPerformansScore")
                        .HasColumnType("float");

                    b.Property<double>("GasOpenningPercentage")
                        .HasColumnType("float");

                    b.Property<bool>("HaveAuthority")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirmId");

                    b.ToTable("Firms");

                    b.HasData(
                        new
                        {
                            FirmId = -2,
                            Address = "ankara",
                            Authority = "mehmet",
                            Email = "mehmet@subilgi.com",
                            FirmPerformansScore = 90.0,
                            GasOpenningPercentage = 60.0,
                            HaveAuthority = true,
                            Name = "Subilgi",
                            Phone = "0312987454",
                            Title = "Subilgi"
                        },
                        new
                        {
                            FirmId = -1,
                            Address = "ankara",
                            Authority = "mehmet2",
                            Email = "mehmet@subilgi.com",
                            FirmPerformansScore = 30.0,
                            GasOpenningPercentage = 50.0,
                            HaveAuthority = true,
                            Name = "Subilgi2",
                            Phone = "0312987454",
                            Title = "Subilgi2"
                        });
                });

            modelBuilder.Entity("AuthorizedCompanySearch.Models.PersonelModel", b =>
                {
                    b.Property<int>("personelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("personelId"), 1L, 1);

                    b.Property<int>("FirmId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmModelFirmId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("personelId");

                    b.HasIndex("FirmModelFirmId");

                    b.ToTable("Personels");

                    b.HasData(
                        new
                        {
                            personelId = -2,
                            FirmId = -1,
                            Name = "mehmet",
                            Phone = "0312945",
                            Surname = "sunbul"
                        },
                        new
                        {
                            personelId = -1,
                            FirmId = -1,
                            Name = "mehmet2",
                            Phone = "03129342",
                            Surname = "sunbul2"
                        });
                });

            modelBuilder.Entity("AuthorizedCompanySearch.Models.PersonelModel", b =>
                {
                    b.HasOne("AuthorizedCompanySearch.Models.FirmModel", null)
                        .WithMany("Personel")
                        .HasForeignKey("FirmModelFirmId");
                });

            modelBuilder.Entity("AuthorizedCompanySearch.Models.FirmModel", b =>
                {
                    b.Navigation("Personel");
                });
#pragma warning restore 612, 618
        }
    }
}
